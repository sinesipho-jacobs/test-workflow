name: Run Robot Framework Tests (Reusable)

on:
  workflow_call:  # This allows other workflows to call this one

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4

      - name: "🐍 Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: "📜 Install Robot Framework"
        run: pip install robotframework

      - name: "🚀 Run Robot Framework Tests"
        run: |
          mkdir -p webapp_tests/robot-test-results  # Ensure directory exists
          robot --output webapp_tests/robot-test-results/output.xml \
                 --log webapp_tests/robot-test-results/log.html \
                 --report webapp_tests/robot-test-results/report.html \
                 webapp_tests/tests/
        continue-on-error: true

      - name: "⬆️ Upload Test Results"
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-test-results
          path: webapp_tests/robot-test-results/

      - name: "⬇️ Download Test Results"
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: robot-test-results
          path: webapp_tests/robot-test-results/
      
      - name: "🐍 Run Test Results Parsing Script"
        if: always()
        run: python functions/display_test_results.py ./webapp_tests/robot-test-results/output.xml webapp_tests/robot-test-results/report.md

      - name: "📑 Display parsed test results"
        if: always()
        run: |
          if [ -f webapp_tests/robot-test-results/report.md ]; then
            cat webapp_tests/robot-test-results/report.md >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Report not found!" >> $GITHUB_STEP_SUMMARY
          fi

  
  display-results:
    needs: run-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: "Download Report Markdown"
        uses: actions/download-artifact@v4
        with:
          name: robot-report # Download ONLY report.md

      - name: "Add Report to Summary"
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const reportMarkdown = fs.readFileSync('report.md', 'utf8');

            // Add a heading or title to your summary
            core.summary.addHeading('Robot Framework Test Results'); 

            core.summary.addRaw(reportMarkdown); // Add the report content

            // Optionally, add a link to the full HTML report if you have it
            // core.summary.addLink('Full HTML Report', 'path/to/report.html'); 

            core.summary.write();

  
