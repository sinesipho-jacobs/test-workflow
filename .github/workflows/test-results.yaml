name: Run and Merge Robot Tests

on:
  workflow_dispatch:

jobs:
  call-web-tests:
    permissions:
      contents: read
      checks: write
      actions: write
    uses: sinesipho-jacobs/test-workflow/.github/workflows/reusable-workflow.yaml@main
    with:
      type: web
      job-name: automated-web-tests
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  call-api-tests:
    permissions:
      contents: read
      checks: write
      actions: write
    uses: sinesipho-jacobs/test-workflow/.github/workflows/reusable-workflow.yaml@main
    with:
      type: api
      job-name: automated-api-tests
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  merge-and-deploy:
    if: always()
    needs: [call-web-tests, call-api-tests]
    permissions:
      contents: write
      actions: write
      checks: write
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4

      - name: "🐍 Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: "📜 Install Required Libraries"
        run: pip install requests robotframework

      - name: "⬇️ Download Test Results"
        uses: actions/download-artifact@v4
        with:
          path: ./robot-test-results/

      - name: Merge Robot Logs
        run: python functions/merge_robot_logs.py --output-dir merged-results/${{ github.run_number }}




      # - name: Find and merge output.xml files
      #   run: |
      #     mkdir -p merged_results/${{ github.run_number }}
      #     run: python test-workflow/functions/merge_reports.py --output-dir merged_results/${{ github.run_number }} || true

      # NEW STEP: Convert merged Robot Framework output to JUnit XML
      # - name: Generate JUnit XML
      #   working-directory: ./merged-results/${{ github.run_number }}
      #   run: |
      #     if [ -f output.xml ]; then
      #       echo "Generating JUnit XML from output.xml"
      #       rebot --xunit report.xml output.xml
      #     else
      #       echo "output.xml not found, skipping JUnit XML generation."
      #     fi
      #   continue-on-error: true

      # NEW STEP: Convert merged Robot Framework output to JUnit XML
      - name: Generate JUnit XML
        working-directory: ./merged-results/${{ github.run_number }}
        run: |
          if [ -f output.xml ]; then
            echo "Generating JUnit XML from output.xml"
            rebot --xunit report.xml output.xml
          else
            echo "output.xml not found, skipping JUnit XML generation."
          fi
        continue-on-error: true

      - name: Debug - Print Merged JUnit XML
        run: cat ./merged-results/${{ github.run_number }}/report.xml

    # NEW STEP: Publish Test Results to GitHub Checks
      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always() # Run even if previous steps failed to show results
        with:
          name: Test Results # This will be the name in the GitHub Checks tab
          path: ./merged-results/${{ github.run_number }}/report.xml # Path to your generated JUnit XML
          reporter: swift-xunit
          fail-on-error: true
            
    # NEW STEP: Publish Test Results to GitHub Checks
      # - name: Publish Test Results
      #   uses: dorny/test-reporter@v1
      #   if: always() # Run even if previous steps failed to show results
      #   with:
      #     name: Test Results # This will be the name in the GitHub Checks tab
      #     path: ./merged-results/${{ github.run_number }}/report.xml # Path to your generated JUnit XML
      #     reporter: java-junit
      #     fail-on-error: true


      - name: "⬆️ Upload Merged Test Results"
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: merged-results
          path: |
            merged-results/${{ github.run_number }}/output.xml
            merged-results/${{ github.run_number }}/log.html
            merged-results/${{ github.run_number }}report.html

      # - name: "Post Test Results to GitHub Checks"
      #   if: always()
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     GITHUB_REPOSITORY: ${{ github.repository }}
      #     GITHUB_SHA: ${{ github.sha }}
      #     JOB_NAME: ${{ github.job }}
      #   run: python ./functions/check.py

      - name: Get Workflow Run ID
        if: always()
        id: run_id
        run: echo "run_id=${{ github.run_id }}" >> $GITHUB_OUTPUT

      - name: Trigger MkDocs Workflow
        if: always()
        run: |
          curl -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.ROBOT_LOGS_PAT }}" \
          https://api.github.com/repos/sinesipho-jacobs/robot-logs/dispatches \
          -d '{"event_type":"deploy-mkdocs","client_payload":{"run_id":"${{ steps.run_id.outputs.run_id }}"}}'
