name: Run and Merge Robot Tests

on:
  workflow_dispatch:

jobs:
  call-web-tests:
    permissions:
      contents: read
      checks: write
      actions: write
    uses: sinesipho-jacobs/test-workflow/.github/workflows/reusable-workflow.yaml@main
    with:
      type: web
      job-name: automated-web-tests
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  call-api-tests:
    permissions:
      contents: read
      checks: write
      actions: write
    uses: sinesipho-jacobs/test-workflow/.github/workflows/reusable-workflow.yaml@main
    with:
      type: api
      job-name: automated-api-tests
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  merge-and-deploy:
    needs: [call-web-tests, call-api-tests]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4

      - name: "🐍 Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: "📜 Install Required Libraries"
        run: pip install requests robotframework

      - name: "⬇️ Download Test Results"
        uses: actions/download-artifact@v4
        with:
          path: ./robot-test-results/

      - name: Find and Merge Robot Framework logs
        run: |
          mkdir -p merged-results/
          find ./robot-test-results -name "*.xml" -exec mv {} ./merged-results/ \;

          OUTPUT_FILES=$(find ./merged-results -name "output.xml" | tr '\n' ' ')
          if [ -n "$OUTPUT_FILES" ]; then
            echo "Merging output files: $OUTPUT_FILES"
            rebot --output ./merged-results/output.xml --log ./merged-results/log.html --report ./merged-results/report.html $OUTPUT_FILES
          else
            echo "No output.xml files found. Skipping merging."
            exit 1
          fi

      - name: "⬆️ Upload Merged Test Results"
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: merged-results
          path: |
            merged-results/output.xml
            merged-results/log.html
            merged-results/report.html

      - name: "Post Test Results to GitHub Checks"
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
          JOB_NAME: ${{ github.job }}
        run: python ./functions/check.py

  push-logs-to-mkdocs-repo:
    needs: merge-and-deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: "📥 Checkout Main Repository"
        uses: actions/checkout@v4
  
      - name: "⬇️ Download Test Results"
        uses: actions/download-artifact@v4
        with:
          name: merged-results
          path: ./merged-results
  
      - name: "📥 Clone MkDocs Repository"
        run: |
          git clone https://sinesipho-jacobs:${{ secrets.ROBOT_LOGS_PAT }}@github.com/sinesipho-jacobs/robot-logs.git
          ls -l robot-logs
  
      - name: "📂 Copy Logs to MkDocs Docs Folder"
        run: |
          cp -r ./merged-results/* ./robot-logs/site/
  
      - name: "🚀 Commit and Push Changes"
        run: |
          cd robot-logs
          git config --global user.name "sinesipho.jacobs"
          git config --global user.email "sinesipho.jacobs@gmail.com"
          git add .
          if [[ $(git status --porcelain) ]]; then
            git commit -m "Update Robot Framework logs"
            git push https://sinesipho-jacobs:${{ secrets.ROBOT_LOGS_PAT }}@github.com/sinesipho-jacobs/robot-logs.git main
          else
            echo "No changes to commit."
          fi
          
  build-and-deploy-mkdocs:
    needs: push-logs-to-mkdocs-repo
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout MkDocs Repository"
        uses: actions/checkout@v4
        with:
          repository: sinesipho-jacobs/robot-logs
          path: robot-logs
          token: ${{ secrets.ROBOT_LOGS_PAT }}  # Use GITHUB_TOKEN instead of PAT

      - name: "📜 Install MkDocs"
        run: pip install mkdocs
        
      - name: "📜 Install MkDocs Materials"
        run: pip install mkdocs-material
        
      - name: "🔨 Build MkDocs Site"
        run: |
          cd robot-logs
          mkdocs build

      - name: "List All Repository Contents (including hidden)"
        run: |
          ls -lah

      - name: Install Wrangler
        run: npm install -g wrangler

      # - name: Print Environment Variables
      #   run: |
      #     echo "CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}"
      #     echo "CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"

      # - name: Deploy
      #   uses: cloudflare/wrangler-action@v3
      #   with:
      #     apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      #     accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      #     command: pages deploy /site --project-name=robot-logs

      - name: Deploy using Cloudflare API
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/projects/robot-logs/deployments" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"branch": "main", "commit_hash": "${{ github.sha }}"}'

      # - name: Deploy to Cloudflare Pages with Wrangler
      #   run: wrangler pages deploy docs/site --project-name=robot-logs
      #   env:
      #     CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      #     CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      

      - name: "🔗 Add Cloudflare Pages Link to Summary"
        run: |
          echo "## 📄 Robot Framework Reports" >> $GITHUB_STEP_SUMMARY
          echo "[View Reports on Cloudflare Pages](https://robot-logs.pages.dev)" >> $GITHUB_STEP_SUMMARY
