name: Run and Merge Robot Tests

on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  workflow_dispatch:

jobs:
  call-web-tests:
    permissions:
      contents: read
      checks: write
      actions: write
    uses: sinesipho-jacobs/test-workflow/.github/workflows/reusable-workflow.yaml@main
    with:
      type: web
      job-name: automated-web-tests
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  call-api-tests:
    permissions:
      contents: read
      checks: write
      actions: write
    uses: sinesipho-jacobs/test-workflow/.github/workflows/reusable-workflow.yaml@main
    with:
      type: api
      job-name: automated-api-tests
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  display-combined-test-results:
      needs: [call-web-tests, call-api-tests]
      if: always()
      runs-on: ubuntu-latest
      permissions:
        contents: read
        checks: write
        actions: write
      steps:
        - name: "üì• Checkout Repository"
          uses: actions/checkout@v4
  
        - name: "üêç Set up Python"
          uses: actions/setup-python@v4
          with:
            python-version: '3.9'
  
        - name: "üìú Install Requests"
          run: pip install requests
  
        - name: "üìú Install Robot Framework"
          run: pip install robotframework

        - name: "‚¨áÔ∏è Download Web Test Results"
          uses: actions/download-artifact@v4
          with:
            path: ./webapp_tests/robot-test-results/
            
        - name: Find and merge Robot Framework logs
          run: |
            OUTPUT_FILES=$(find ./webapp_tests/robot-test-results -name "output.xml" | tr '\n' ' ')
            if [ -n "$OUTPUT_FILES" ]; then
              rebot --output ./webapp_tests/merged_output.xml --log ./webapp_tests/index.html --report ./webapp_tests/merged_report.html $OUTPUT_FILES
            else
              echo "No output.xml files found. Skipping merging."
            fi
            
        - name: Run Test Results Parsing Script
          if: always()
          run: python ./functions/display_test_results.py
        - name: "Debug /webapp_tests"
          if: always()
          shell: bash
          run: | 
            pwd
            ls -lah ./webapp_tests/
        - name: "Post Test Results to GitHub Checks"
          if: always()
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            GITHUB_REPOSITORY: ${{ github.repository }}
            GITHUB_SHA: ${{ github.sha }}
            JOB_NAME: ${{ github.job }}
          run: python ./functions/check.py

        # - name: Copy Reports to docs
        #   run: |
        #    cp ./webapp_tests/index.html ./
        #    cp ./webapp_tests/merged_output.xml ./
        #    cp ./webapp_tests/merged_report.html ./

        # Copy Reports to root directory
        - name: "Copy Reports to Root"
          run: |
            cp ./webapp_tests/index.html ./
            cp ./webapp_tests/merged_output.xml ./
            cp ./webapp_tests/merged_report.html ./
  
        # Commit and Push Files to the gh-pages branch
        - name: "Commit and Push Reports to gh-pages"
          run: |
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git add .
            git commit -m "Add merged test reports"
            git push origin HEAD:gh-pages
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        # Optional: Deploy to GitHub Pages if you are using `gh-pages` branch
        - name: "Deploy to GitHub Pages"
          uses: peaceiris/actions-gh-pages@v3
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: ./  # Publish from the root directory
            branch: gh-pages  # Make sure GitHub Pages is set to serve from this branch


  
 
